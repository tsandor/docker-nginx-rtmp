daemon off;

# error_log logs/error.log debug;
error_log /dev/stderr warn;

events {
    worker_connections 1024;
}

rtmp_auto_push on;

rtmp {
    server {
        listen 1935;
        notify_method get;

        ping 30s;
        chunk_size 4000;

        application stream {
            live on;

            exec ffmpeg -i rtmp://localhost:1935/stream/$name
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p2628kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -g 30 -r 30 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p1128kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 750k -f flv -g 30 -r 30 -s 640x360 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_360p878kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 400k -f flv -g 30 -r 30 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p528kbs
              -c:a libfdk_aac -b:a 64k -c:v libx264 -b:v 200k -f flv -g 15 -r 15 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p264kbs;

            recorder audio {
                record audio;
                record_path /srv/rec;
                record_suffix _%Y-%m-%d_%H-%M-%S.audio.flv;
                exec_record_done ffmpeg -y -i $path -acodec libmp3lame -ar 44100 -ac 1 $dirname/$basename.mp3;
            }

            recorder all {
                record all;
                record_path /srv/rec;
                record_suffix _%Y-%m-%d_%H-%M-%S.flv;
#                record_interval 30m;
#                record_notify on;
#                exec_record_done bash -c "mkdir -p $dirname/$name && /usr/local/bin/ffmpeg -i $path -c copy $dirname/$name/$basename.mp4 && rm $path";
                exec_record_done ffmpeg -y -i $path -acodec libmp3lame -ar 44100 -ac 1 -vcodec libx264 $dirname/$basename.mp4;
            }
        }

        application hls {
            live on;

            dash on;
            dash_fragment 15s;
            dash_nested on; 
#            dash_repetition on;
#            dash_fragment 4;
            dash_playlist_length 120;
            dash_cleanup on;
            dash_path /tmp/dash;  

            # dash_variant _720p2628kbs BANDWIDTH=2628000 WIDTH=1280 HEIGHT=720 MAX;
            # dash_variant _480p1128kbs BANDWIDTH=1128000 WIDTH=854 HEIGHT=480;
            # dash_variant _360p878kbs BANDWIDTH=878000 WIDTH=640 HEIGHT=360;
            # dash_variant _240p528kbs BANDWIDTH=528000 WIDTH=426 HEIGHT=240;
            # dash_variant _240p264kbs BANDWIDTH=264000 WIDTH=426 HEIGHT=240;

            hls on;
            hls_fragment_naming system;
            hls_fragment 5;
            hls_playlist_length 10;
            hls_path /opt/data/hls;
            hls_nested on;

            drop_idle_publisher 15s;
#            on_publish http://127.0.0.1/api.php?action=start_stream;
#            on_publish_done http://127.0.0.1/api.php?action=end_stream;
#            allow publish all;
#            deny play all;            

            hls_variant _720p2628kbs BANDWIDTH=2628000,RESOLUTION=1280x720;
            hls_variant _480p1128kbs BANDWIDTH=1128000,RESOLUTION=854x480;
            hls_variant _360p878kbs BANDWIDTH=878000,RESOLUTION=640x360;
            hls_variant _240p528kbs BANDWIDTH=528000,RESOLUTION=426x240;
            hls_variant _240p264kbs BANDWIDTH=264000,RESOLUTION=426x240;
        }
    }
}

http {
    disable_symlinks on;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;
    resolver 8.8.8.8;

    gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

# old SSL config
	ssl_protocols TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_session_cache shared:ssl_session_cache:10m;

    # log_format compression '$remote_addr - $remote_user [$time_local] '
    #                     '"$request" $status $bytes_sent '
    #                     '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    log_format json '{"@marker": ["nginx","access-log"],'
                    '"date_access": "$time_iso8601", '
                    '"network.client_ip": "$remote_addr", '
                    '"http.ident": "$host", '
                    '"network.bytes_write": $body_bytes_sent, '
                    '"http.response_time": "$request_time", '
                    '"http.status_code": $status, '
                    '"http.request": "$request_uri", '
                    '"http.verb": "$request_method", '
                    '"http.referer": "$http_referer", '
                    '"http.useragent": "$http_user_agent", '
                    '"message": "$request"}';
    # access_log /dev/stdout combined;

    # ssl_ciphers         HIGH:!aNULL:!MD5;
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    # ssl_session_cache   shared:SSL:10m;
    # ssl_session_timeout 10m;

    server {
        listen 80;
        access_log /dev/stdout json; #buffer=32k;

        location /control {
	        rtmp_control all;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
#            allow 127.0.0.1;
#            deny all;
	    }

        location /dash {
            root /tmp;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # Uncomment these lines to enable SSL.
        # Update the ssl paths with your own certificate and private key.
        # listen 443 ssl;
        # ssl_certificate     /opt/certs/example.com.crt;
        # ssl_certificate_key /opt/certs/example.com.key;

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /opt/data;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /live {
          alias /opt/data/hls;
          types {
              application/vnd.apple.mpegurl m3u8;
              video/mp2t ts;
          }
          add_header Cache-Control no-cache;
          add_header Access-Control-Allow-Origin *;
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet static/stat.xsl;
        }

        location /stat.json {
            proxy_pass http://localhost/stat.xml;
            xml_entities /www/static/entities.dtd;
            xslt_stylesheet /www/static/xml2json.xslt;
        }

        location /nclients {
            proxy_pass http://localhost/stat;
            xslt_stylesheet /www/static/nclients.xsl app='$arg_app' name='$arg_name';
            add_header Refresh "3; $request_uri";
        }

        location /rec {
            alias /srv/rec;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            tcp_nopush on;
        }

        location /static {
            alias /www/static;
        }

        location = /crossdomain.xml {
            root /www/static;
            default_type text/xml;
            expires 24h;
        }
    }
}
